version: '3.4'

services:
  fiapreservas.webapi: &api
    build:
      context: .
      dockerfile: FiapReservas.WebAPI/Dockerfile
    environment:
      - NOME=API1
      - ASPNETCORE_ENVIRONMENT=development
      - ConnectionString=mongodb://root:example@mongo:27017/
      - Database=FiapOrders
      - JwtSecret=307ca26b-50bd-44cb-afd3-b15ab14eb3fe
      - JwtAudience=FiapReservas.WebAPI
      - JwtIssuer=https://localhost
    networks:
      - fiap-rede
    ports:
      - "5001:8080"
  fiapreservas.webapi2:
    <<: *api
    ports:
      - "5002:8080"
    environment:
      - NOME=API2
      - ASPNETCORE_ENVIRONMENT=development
      - ConnectionString=mongodb://root:example@mongo:27017/
      - Database=FiapOrders
      - JwtSecret=307ca26b-50bd-44cb-afd3-b15ab14eb3fe
      - JwtAudience=FiapReservas.WebAPI
      - JwtIssuer=https://localhost
  fiapreservas.frontend:
    build:
      context: FiapReservas.Frontend/fiap-reservas
      dockerfile: Dockerfile
    networks:
      - fiap-rede
    ports:
      - "8085:4200"
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fiapreservas.webapi
      - fiapreservas.webapi2
    ports:
      - "9999:9999"
    networks:
      - fiap-rede
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - fiap-rede
networks:
  fiap-rede:
    driver: bridge